volumes:
  pgdata:

networks:
  postgres:
    driver: bridge

services:
  db:
    container_name: postgres
    hostname: postgres
    ports:
      - 5432:5432
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE:-digitallions}
      PGDATA: /var/lib/postgresql/data/digitallions
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
    - postgres

  backend:
    container_name: backend
    hostname: backend
    image: "digitallionsbackend:latest"
    build:
      context: ./backend
    environment:
      POSTGRES_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}"
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      FEATURE_AUTH0: ${FEATURE_AUTH0}
      AUTH0_SERVER: ${AUTH0_SERVER}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_CONNECTION_ID: ${AUTH0_CONNECTION_ID}
      PORT: 8000
    ports:
      - 8000:8000
    networks:
      - postgres
      
  frontend:
    container_name: frontend
    image: "digitallionsfrontend:latest"
    build:
      context: ./frontend
    environment:
      API_URL: ${API_URL:-"http://localhost:8000"}
    ports:
      - 3000:3000

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    networks:
      - postgres



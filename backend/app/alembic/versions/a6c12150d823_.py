"""empty message

Revision ID: a6c12150d823
Revises: c084769e5980
Create Date: 2024-06-18 21:18:18.516958

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a6c12150d823"
down_revision: str | None = "c084769e5980"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_user_email_address", table_name="user")
    op.drop_table("user")
    op.drop_constraint("teams_community_id_fkey", "teams", type_="foreignkey")
    op.drop_column("teams", "community_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "teams",
        sa.Column("community_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "teams_community_id_fkey", "teams", "communities", ["community_id"], ["id"]
    )
    op.create_table(
        "user",
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email_address", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("role", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "hashed_password", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column("salt", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
    )
    op.create_index("ix_user_email_address", "user", ["email_address"], unique=True)
    # ### end Alembic commands ###

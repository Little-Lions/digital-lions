"""Initial database schema

Revision ID: 70e160773171
Revises: 
Create Date: 2025-01-08 18:41:32.325191

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "70e160773171"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "implementing_partners",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "resource_path",
            sa.String(),
            sa.Computed(
                "'/implementingPartners/' || id ",
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # Insert default record into "implementing_partners"
    from core.database.schema import ImplementingPartner

    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    little_lions = ImplementingPartner(
        name="Little Lions",
        is_active=True,
        created_at=sa.func.now(),
        last_updated_at=sa.func.now(),
    )
    session.add(little_lions)
    session.commit()

    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("level", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("resource_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "communities",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("implementing_partner_id", sa.Integer(), nullable=True),
        sa.Column(
            "resource_path",
            sa.String(),
            sa.Computed(
                "'/implementingPartners/' || implementing_partner_id || '/communities/' || id ",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["implementing_partner_id"],
            ["implementing_partners.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "teams",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("implementing_partner_id", sa.Integer(), nullable=True),
        sa.Column("community_id", sa.Integer(), nullable=True),
        sa.Column(
            "resource_path",
            sa.String(),
            sa.Computed(
                "'/implementingPartners/' || implementing_partner_id || '/communities/' || community_id || '/teams/' || id",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["community_id"], ["communities.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["implementing_partner_id"],
            ["implementing_partners.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "children",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("gender", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workshops",
        sa.Column("date", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("workshop_number", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attendances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("attendance", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("child_id", sa.Integer(), nullable=True),
        sa.Column("workshop_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["child_id"], ["children.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workshop_id"], ["workshops.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("attendances")
    op.drop_table("workshops")
    op.drop_table("children")
    op.drop_table("teams")
    op.drop_table("communities")
    op.drop_table("roles")
    op.drop_table("implementing_partners")
    # ### end Alembic commands ###

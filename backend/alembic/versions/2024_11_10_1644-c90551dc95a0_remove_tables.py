"""Add Roles table, remove user table:

Revision ID: c90551dc95a0
Revises: fa53dc00de3c
Create Date: 2024-11-10 16:44:20.138216

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c90551dc95a0"
down_revision: Union[str, None] = "fa53dc00de3c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_users_email_address", table_name="users")
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("scope", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "last_updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "first_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "email_address", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column("role", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "hashed_password",
            postgresql.BYTEA(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "salt", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "is_registered", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_index(
        "ix_users_email_address", "users", ["email_address"], unique=True
    )
    drop_table("roles")
    # ### end Alembic commands ###

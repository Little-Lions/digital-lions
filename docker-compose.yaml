volumes:
  pgdata:

networks:
  postgres:
    driver: bridge

services:
  db:
    container_name: postgres
    hostname: postgres
    ports:
      - 5432:5432
    image: postgres
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD: 
      POSTGRES_DB:
      # PGDATA: /var/lib/postgresql/data/${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
    - postgres

  backend:
    container_name: backend
    hostname: backend
    image: "${DOCKER_IMAGE:-lions-backend}:${DOCKER_TAG:-latest}"
    build:
      context: ./backend
    environment:
      POSTGRES_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}"
      ALLOWED_ORIGINS: 
      FEATURE_AUTH0: 
      AUTH0_SERVER: 
      AUTH0_AUDIENCE:
      AUTH0_CLIENT_ID: 
      AUTH0_CLIENT_SECRET: 
      AUTH0_CONNECTION_ID:
      RESEND_API_KEY: 
      RESEND_SENDER:
      PORT: 8000
    ports:
      - 8000:8000
    networks:
      - postgres
      
  frontend:
    container_name: frontend
    image: "${DOCKER_IMAGE:-lions-frontend}:${DOCKER_TAG:-latest}"
    build:
      context: ./frontend
    environment:
      AUTH0_AUDIENCE: 
      AUTH0_BASE_URL:
      AUTH0_CLIENT_ID:
      AUTH0_CLIENT_SECRET:
      AUTH0_ISSUER_BASE_URL:
      AUTH0_SECRET:
      NEXT_PUBLIC_API_URL:
      PORT:
    ports:
      - 3000:3000



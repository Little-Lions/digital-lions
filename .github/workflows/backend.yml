name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
    paths:
      - backend/**

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set versions
        working-directory: backend
        run: |
          PYTHON_VERSION=$(cat .python-version)
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_ENV
          POETRY_VERSION=$(cat .poetry-version)
          echo "POETRY_VERSION=$POETRY_VERSION" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        run: |
          pip install poetry==${{ env.POETRY_VERSION }}
      - name: Install dependencies
        working-directory: backend
        run: |
          poetry install --no-interaction --no-root
      - name: Pytest
        working-directory: backend
        run: |
          poetry run python -m pytest tests -vvv --cov=app 

  deploy_dev:
    name: Deploy Backend to Coolify Dev
    if: github.ref == 'refs/heads/dev'
    environment: dev
    needs: [test] 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Coolify
        run: | 
         curl --request GET '${{ secrets.COOLIFY_WEBHOOK_BACKEND }}' \
              --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'

  # deploy_prd:
  #   name: Deploy Backend to Coolify
  #   if: github.ref == 'refs/heads/main'
  #   environment: production
  #   needs: [test] 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Deploy to Coolify
  #       run: | 
  #         curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' \
  #               --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'

